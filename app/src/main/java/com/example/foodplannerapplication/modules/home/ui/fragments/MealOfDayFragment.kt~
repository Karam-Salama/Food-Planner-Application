package com.example.foodplannerapplication.modules.home.ui.fragments

import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.lifecycle.lifecycleScope
import androidx.recyclerview.widget.LinearLayoutManager
import com.bumptech.glide.Glide
import com.example.foodplannerapplication.R
import com.example.foodplannerapplication.modules.home.data.models.MealModel
import com.example.foodplannerapplication.modules.home.data.services.RetrofitHelper
import com.google.android.material.imageview.ShapeableImageView
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext

class MealOfDayFragment : Fragment() {
    // ================================= Global Variables ==========================================
    private lateinit var mealTitle: TextView
    private lateinit var mealImage: ShapeableImageView
    private var mealOfTheDay: MealModel? = null

    // ================================= onCreateView()  ===========================================
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        return inflater.inflate(R.layout.fragment_meal_of_day, container, false)
    }

    // ================================= onViewCreated() ===========================================
    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        initViews(view)
        fetchDataFromApi()
    }

    // ================================= initViews  ================================================
    private fun initViews(view: View) {
        mealTitle = view.findViewById(R.id.mealTitle)
        mealImage = view.findViewById(R.id.mealImage)
    }

    // ================================= fetchDataFromApi ==========================================
    private fun fetchDataFromApi() {
        lifecycleScope.launch(Dispatchers.IO) {
            try {
                val response = RetrofitHelper.retrofitService.getMealOfTheDay()
                mealOfTheDay = response.meals?.firstOrNull()

                withContext(Dispatchers.Main) {
                    mealTitle.text = mealOfTheDay?.strMeal
                    mealOfTheDay?.strMealThumb?.let { loadMealImage(it) }
                }
            } catch (e: Exception) {
                withContext(Dispatchers.Main) {
                    Log.e("===>", "Error Fetching Meal of the Day", e)
                }
            }
        }
    }

    // ================================= loadMealImage Using Glide =================================
    private fun loadMealImage(imageUrl: String) {
        Glide.with(this)
            .load(imageUrl)
            .placeholder(R.drawable.placeholder_ic)
            .into(mealImage)
    }
}
